# -------------------------------------
# reorganize data so that observations
# on fertilizer type occupy a single row
# fertilizer is unit of observation
# Data on NPK composition from Sheahan et al (2014), Food Policy
# -------------------------------------
conv <- read.csv(paste(dataPath, "Fert_comp.csv", sep="/")) %>%
transmute(typ=Fert_type2, n=N_share/100, p=P_share/100) %>%
filter(typ %in% levels(fert1$typ))
fert1 <- left_join(fert1, conv)
fert2 <- left_join(fert2, conv)
# -------------------------------------
# organize fertilizer data for analysis
fert <- rbind(fert1, fert2)
fert <- mutate(fert,
Vfert=valu/qty,
Qn=qty*n,
Qp=qty*p)
fert$Pn <- fert$Vfert/fert$n
# Compute subsidised, non-subsidised and mix fertilizer prices per plot
# As valu or N is sometimes 0, all prices that are 0 are set to NA
fertnosub   <- filter(fert, vouch==0) %>%
group_by(y2_hhid, plotnum) %>%
summarise(N=sum(Qn, na.rm=TRUE),
WPnnosub=sum((Qn/N)*Pn, na.rm=TRUE)) %>%
dplyr::select(-N) %>%
mutate(WPnnosub = replace(WPnnosub, WPnnosub==0, NA))
fertsub   <- filter(fert, vouch==1) %>%
group_by(y2_hhid, plotnum) %>%
summarise(N=sum(Qn, na.rm=TRUE),
WPnsub=sum((Qn/N)*Pn, na.rm=TRUE)) %>%
dplyr::select(-N) %>%
mutate(WPnsub = replace(WPnsub, WPnsub==0, NA))
fertmix <- filter(fert, vouch %in% c(0,1)) %>%
group_by(y2_hhid, plotnum) %>%
summarise(N=sum(Qn, na.rm=TRUE),
P=sum(Qp, na.rm=TRUE),
WPn=sum((Qn/N)*Pn, na.rm=TRUE)) %>%
mutate(WPn = replace(WPn, WPn==0, NA))
# join back with the rest of the data and set N and P to 0 for NA values
plot <- left_join(plot, fertmix) %>%
left_join(., fertnosub) %>%
left_join(., fertsub) %>%
mutate(N = ifelse(is.na(N), 0, N),
P = ifelse(is.na(P), 0, P))
rm(list=c("fert1", "fert2", "fert", "fertsub", "fertnosub", "fertmix", "conv"))
#######################################
############### LABOUR ################
#######################################
# WDswitch
# lab <- read_dta(file.path(dataPath, "TZA\\2010\\Data\\TZNPS2AGRDTA/AG_SEC3A.dta")) %>%
lab <- read_dta(file.path(dataPath, "\\TZNPS2AGRDTA/AG_SEC3A.dta")) %>%
dplyr::select( y2_hhid, plotnum, ag3a_70_id1:ag3a_72_9 )
# remove houshold labour IDs and question ag3a_71 which we don't need
bad <- grep( "ag3a_70_id", names( lab ) )
lab <- lab[, -bad]
lab <- dplyr::select( lab, -ag3a_71 )
# remove variables that refer to wage paid for hired labour
# this could be added later to consider input costs
bad <- names( lab )[( length( lab )-15 ):length( lab )][seq( from=4, to=16, by=4 )]
lab <- lab[, -which( names( lab ) %in% bad )]
# create a dataframe with just family and hired labour
lab <- transmute( lab, y2_hhid, plotnum,
fam_lab_days=rowSums( lab[, 3:26], na.rm=TRUE ),
hir_lab_days=rowSums( lab[, 27:ncol( lab )], na.rm=TRUE ) )
lab <- transmute(lab, y2_hhid, plotnum, lab=fam_lab_days + hir_lab_days)
# doesn't make sense to have 0 labour on a plot so set values to zero
lab$lab <- ifelse(lab$lab %in% 0, NA, lab$lab)
#######################################
############ rural/urban ##############
#######################################
# WDswitch
# rural <-  read_dta(file.path(dataPath, "TZA\\2010\\Data\\TZNPS2HH1DTA/HH_SEC_A.dta")) %>%
rural <-  read_dta(file.path(dataPath, "HH_SEC_A.dta")) %>%
dplyr::select(y2_hhid, rural=y2_rural)
rural$rural <- ifelse(rural$rural %in% 1, 1, 0)
#######################################
############### GEO ###################
#######################################
# NB: names of distance variables in BID are not correct. dist hh does not exist, instead names are dist01-dist06
# Renamed to be made consistent with year 3 data.
# WDswitch
# geo <- read.csv(file.path(wdPath, "Analysis\\TZA\\Data\\TZA_geo_total_2010.csv"), stringsAsFactors=F) %>%
geo <- read.csv(file.path(dataPath, "TZA_geo_total_2010.csv"), stringsAsFactors=F) %>%
dplyr::select(y2_hhid, lon, lat, plotnum, SPEI, RootDepth, region=NAME_1,
AEZ=land03, ph=ph_sd1_sd3, ph2=ph_sd1_sd5,
SOC=SOC_sd1_sd3, SOC2=SOC_sd1_sd5, rain=gsRainfall,
plot01=dist01, dist01=dist02, dist02=dist03, dist03=dist04, dist04=dist05, dist05=dist06,
clim02,clim04, clim05,
soil01, soil02, soil03, soil04, soil05, soil06, soil07, soil08, soil09, soil10, soil11,
crops04, crops05, crops07, crops08,
YA, YW, YP) %>%
unique()
geo$AEZ <- as.factor(geo$AEZ)
geo$y2_hhid <- as.character(geo$y2_hhid)
geo$y2_hhid <- ifelse(str_length(geo$y2_hhid) < 16, paste("0", geo$y2_hhid, sep=""), geo$y2_hhid)
# add a zone variable
geo$zone[geo$region %in% c("Kagera","Mwanza", "Mara")] <- "Lake"
geo$zone[geo$region %in% c("Shinyanga","Kigoma", "Tabora")] <- "Western"
geo$zone[geo$region %in% c("Arusha","Kilimanjaro", "Manyara", "Tanga")] <- "Northern"
geo$zone[geo$region %in% c("Singida","Dodoma")] <- "Central"
geo$zone[geo$region %in% c("Rukwa", "Mbeya","Iringa")] <- "Southern Highlands"
geo$zone[geo$region %in% c("Pwani","Morogoro", "Dar-Es-Salaam")] <- "Eastern"
geo$zone[geo$region %in% c("Lindi","Ruvuma", "Mtwara")] <- "Southern"
geo$zone[geo$region %in% c("Kaskazini-Unguja", "Zanzibar South and Central", "Kusini-Pemba",
"Kaskazini-Pemba", "Zanzibar West")] <- "Zanzibar"
geo$zone <- factor(geo$zone)
#######################################
############### AREAs #################
#######################################
# WDswitch
# areas <- read_dta(file.path(dataPath, "Plot_size/areas_tza_y2_imputed.dta")) %>%
areas <- read_dta(file.path(dataPath, "areas_tza_y2_imputed.dta")) %>%
dplyr::select(y2_hhid=case_id, plotnum, area=area_gps_mi_50)
areas$area <- ifelse(areas$area %in% 0, NA, areas$area)
areaTotal <- group_by(areas, y2_hhid) %>%
summarise(area_tot = sum(area, na.rm=TRUE))
areaTotal$area_tot <- ifelse(areaTotal$area_tot %in% 0, NA, areaTotal$area_tot)
#######################################
############### ASSETS ################
#######################################
# WDswitch
# implmt <- read_dta(file.path(dataPath, "TZA\\2010\\Data\\TZNPS2AGRDTA/AG_SEC11.dta")) %>%
implmt <- read_dta(file.path(dataPath, "TZNPS2AGRDTA/AG_SEC11.dta")) %>%
dplyr::select(y2_hhid, itemcode, qty=ag11_01, valu=ag11_02) %>%
filter(!qty %in% 0, !is.na(qty), !valu %in% 0, !is.na(valu)) %>%
transmute(y2_hhid, valu=qty*valu) %>%
group_by(y2_hhid) %>%
summarise(value=sum(valu))
#######################################
########## TRANSPORT COSTS ############
#######################################
# WDswitch
# tc <- read_dta(file.path(dataPath, "TZA\\2010\\Data\\TZNPS2AGRDTA/AG_SEC5a.dta")) %>%
tc <- read_dta(file.path(dataPath, "TZNPS2AGRDTA/AG_SEC5a.dta")) %>%
dplyr::filter(zaocode %in% 11) %>%
dplyr::select(y2_hhid, trans=ag5a_15, trans_dist=ag5a_16, trans_cost=ag5a_19)
tc$trans <- ifelse(tc$trans %in% 1, 1, 0)
#######################################
########### SOCIO/ECONOMIC ############
#######################################
# WDswitch
# se <- read_dta(file.path(dataPath, "TZA\\2010\\Data\\TZNPS2HH1DTA\\HH_SEC_B.dta")) %>%
se <- read_dta(file.path(dataPath, "HH_SEC_B.dta")) %>%
filter(hh_b05 %in% 1) %>% # 1 for head of household
dplyr::select(y2_hhid, indidy2, sex=hh_b02, yob=hh_b03_1, age=hh_b04)
se$sex <- ifelse(se$sex %in% 2, 1, 0)
se$yob <- as.integer(as.character(se$yob))
# education
# WDswitch
# ed <- read_dta(file.path(dataPath, "TZA\\2010\\Data\\TZNPS2HH1DTA\\HH_SEC_C.dta")) %>%
ed <- read_dta(file.path(dataPath, "HH_SEC_C.dta")) %>%
dplyr::select(y2_hhid, indidy2, start=hh_c04, end=hh_c08)
ed$end <- as.integer(as.character(ed$end))
ed$end <- ifelse(ed$end %in% 9999, NA, ed$end)
# join se and ed to find years in school
se <- left_join(se, ed) %>% dplyr::select(-indidy2)
rm("ed")
se$educ <- se$end - (se$yob + se$start)
se <- dplyr::select(se, -start, -end, -yob)
# if anyone received negative years of schooling, set to NA
se$educ <- ifelse(se$educ < 0, NA, se$educ)
# still some people have received a lot of schooling!!!!
# also NA values!
# plot ownership
# WDswitch
# own <- read_dta(file.path(dataPath, "TZA\\2010\\Data\\TZNPS2AGRDTA/AG_SEC3A.dta")) %>%
own <- read_dta(file.path(dataPath, "TZNPS2AGRDTA/AG_SEC3A.dta")) %>%
dplyr::select(y2_hhid, plotnum, own=ag3a_24)
own$own <- ifelse(own$own %in% 1 | own$own %in% 5, 1, 0)
#######################################
########### CROSS SECTION #############
#######################################
# joins at the plot level
TZA2010 <- left_join(oput_maize, plot)
TZA2010 <- left_join(TZA2010, lab)
TZA2010 <- left_join(TZA2010, areas)
TZA2010 <- left_join(TZA2010, own)
# joins at the household level
TZA2010 <- left_join(TZA2010, implmt)
TZA2010 <- left_join(TZA2010, geo)
TZA2010 <- left_join(TZA2010, rural)
TZA2010 <- left_join(TZA2010, se)
TZA2010 <- left_join(TZA2010, tc)
TZA2010 <- left_join(TZA2010, areaTotal)
rm(list=ls()[!ls() %in% "TZA2010"])
# -------------------------------------
# Make some new variables
# -------------------------------------
# per hectacre
TZA2010 <- mutate(TZA2010,
yld=qty/area,
N=N/area,
P=P/area,
lab=lab/area,
asset=value/area_tot
)
# -------------------------------------
# Inflate 2011 prices to 2013 prices: assets, fertilizer and maize
# using inflation rate for 2011 and 2013. These years were selected as the main part of the survey takes place in these years.
# from world bank:
# http://data.worldbank.org/indicator/FP.CPI.TOTL.ZG/countries/TZ?display=graph
# -------------------------------------
TZA2010$asset <- TZA2010$asset*(1+0.12)*(1+0.16)
TZA2010$maize_prc <- TZA2010$maize_prc*(1+0.12)*(1+0.16)
TZA2010$WPn <- TZA2010$WPn*(1+0.12)*(1+0.16)
TZA2010$WPnnosub <- TZA2010$WPnnosub*(1+0.12)*(1+0.16)
TZA2010$WPnsub <- TZA2010$WPnsub*(1+0.12)*(1+0.16)
TZA2010 <- dplyr::select(TZA2010, -plotnum, -qty, -value)
# add final variables
TZA2010 <- mutate(TZA2010,
N2=N^2,
asset2=asset^2,
area2=area^2,
lab2=lab^2,
surveyyear=2010
)
# save to file
# save(TZA2010, file=".\\Analysis\\TZA\\Data\\TZA10_data.RData")
write.csv(TZA2010, "C:/Users/Tomas/Documents/LEI/TZA10_data.csv", row.names=FALSE)
names(TZA2010)
rm(list=ls())
# -------------------------------------
# -------------------------------------
# Ethiopia data 2013 - 2014 survey
# -------------------------------------
# WDswitch
dataPath <- "C:/Users/Tomas/Documents/LEI/data/ETH"
# dataPath <- "D:\\Data\\IPOP\\SurveyData\\ETH\\2013\\Data"
# wdPath <- "D:\\Dropbox\\Michiel_research\\2285000066 Africa Maize Yield Gap"
# setwd(wdPath)
library(haven)
library(stringr)
library(dplyr)
options(scipen=999)
#######################################
############### OUTPUT ################
#######################################
# WDswitch
oput <- read_dta(file.path(dataPath, "Post-Harvest/sect9_ph_w2.dta")) %>%
dplyr::select(holder_id, household_id2, parcel_id, field_id,
crop=crop_code, qty=ph_s9q05)
oput$crop <- as_factor(oput$crop)
# -------------------------------------
# add a dummy if a legume was grown
# count number of crops per field
legumes <- c("CHICK PEAS", "HARICOT BEANS", "HORSE BEANS", "LENTILS",
"FIELD PEAS", "VETCH", "GIBTO", "SOYA BEANS", "CASTOR BEANS")
oput_x <- group_by(oput, holder_id, household_id2, parcel_id, field_id) %>%
summarise(crop_count=sum(!is.na(crop)),
legume = ifelse(any(crop %in% legumes), 1, 0))
oput <- left_join(oput, oput_x); rm(oput_x)
# select on maize and remove observations with quantity NA or 0
oput_maize <- oput[oput$crop %in% "MAIZE" & ! is.na(oput$qty) & !oput$qty %in% 0,]
oput_maize <- dplyr::select(oput_maize, -crop)
rm("oput", "legumes")
#######################################
############## CHEMICAL ###############
#######################################
# -------------------------------------
# variables recorded at parcel, field,
# and crop level
# parcel level
# WDswitch
parcel <- read_dta(file.path(dataPath, "Post-Planting/sect2_pp_w2.dta")) %>%
dplyr::select(holder_id, household_id2, parcel_id, soil_type=pp_s2q14, soil_qlty=pp_s2q15)
parcel$soil_type <- as_factor(parcel$soil_type)
parcel$soil_qlty <- as_factor(parcel$soil_qlty)
# field level variables
# WDswitch
field <- read_dta(file.path(dataPath, "Post-Planting/sect3_pp_w2.dta")) %>%
dplyr::select(holder_id, household_id2, parcel_id, field_id,
inter_crop=pp_s3q03b, fallow10=pp_s3q03c, fallow_year=pp_s3q03d,
extension=pp_s3q11, irrig=pp_s3q12, fert_any=pp_s3q14,
other_inorg=pp_s3q20a, manure=pp_s3q21, compost=pp_s3q23,
other_org=pp_s3q25, eros_prot=pp_s3q32, mulch=pp_s3q37)
field$inter_crop <- ifelse(field$inter_crop %in% 2, 1, 0)
field$fallow10 <- ifelse(field$fallow10 %in% 1, 1, 0)
field$extension <- ifelse(field$extension %in% 1, 1, 0)
field$irrig <- ifelse(field$irrig %in% 1, 1, 0)
field$fert_any <- ifelse(field$fert_any %in% 1, 1, 0)
field$other_inorg <- ifelse(field$other_inorg %in% 1, 1, 0)
field$manure <- ifelse(field$manure %in% 1, 1, 0)
field$compost <- ifelse(field$compost %in% 1, 1, 0)
field$other_org <- ifelse(field$other_org %in% 1, 1, 0)
field$eros_prot <- ifelse(field$eros_prot %in% 1, 1, 0)
field$mulch <- ifelse(field$mulch %in% 1, 1, 0)
# crop level variables
# WDswitch
crop <- read_dta(file.path(dataPath, "Post-Planting/sect4_pp_w2.dta")) %>%
dplyr::select(holder_id, household_id2, parcel_id, field_id, crop=crop_code,
cropping=pp_s4q02, month=pp_s4q12_a, crop_area=pp_s4q03,
herb=pp_s4q06, fung=pp_s4q07, seed_type=pp_s4q11,
seed_qty=pp_s4q11b)
crop$crop <- as_factor(crop$crop)
crop$cropping <- as_factor(crop$cropping)
crop$month <- as_factor(crop$month)
crop$herb <- ifelse(crop$herb %in% 1, 1, 0)
crop$fung <- ifelse(crop$fung %in% 1, 1, 0)
crop$seed_type <- ifelse(crop$seed_type %in% 2, 1, 0)
# select only maize crops
crop <- filter(crop, crop %in% "MAIZE") %>% select(-crop)
# -------------------------------------
# unit of observation is not fertilizer
# WDswitch
fert1 <- read_dta(file.path(dataPath, "Post-Planting/sect3_pp_w2.dta")) %>%
dplyr::select(holder_id, household_id2, parcel_id, field_id, typ=pp_s3q15, qty=pp_s3q16_a,
purch=pp_s3q16b, purch_kg=pp_s3q16c, valu=pp_s3q16d)
fert1$typ <- ifelse(fert1$typ %in% 1, "UREA", NA)
fert1$purch <- ifelse(fert1$purch %in% 1, 1, 0)
# WDswitch
fert2 <- read_dta(file.path(dataPath, "Post-Planting/sect3_pp_w2.dta")) %>%
dplyr::select(holder_id, household_id2, parcel_id, field_id, typ=pp_s3q18, qty=pp_s3q19_a,
purch=pp_s3q19b, purch_kg=pp_s3q19c, valu=pp_s3q19d)
fert2$typ <- ifelse(fert2$typ %in% 1, "DAP", NA)
fert2$purch <- ifelse(fert2$purch %in% 1, 1, 0)
# -------------------------------------
# read in nitrogen conversion file
conv <- read.csv(paste(dataPath, "Fert_comp.csv", sep="/")) %>%
transmute(typ=Fert_type2, n=N_share/100, p=P_share/100) %>%
filter(typ %in% c("UREA", "DAP"))
fert1 <- left_join(fert1, conv)
fert2 <- left_join(fert2, conv)
# -------------------------------------
# If purchased amount of nitrogen is zero
# set to NA to avoid Inf values
fert1$purch_kg <- ifelse(fert1$purch_kg == 0, NA, fert1$purch_kg)
fert2$purch_kg <- ifelse(fert2$purch_kg == 0, NA, fert2$purch_kg)
fert1 <- mutate(fert1,
Vfert=valu/purch_kg,
Qn=qty*n,
Qp=qty*p)
fert2 <- mutate(fert2,
Vfert=valu/purch_kg,
Qn=qty*n,
Qp=qty*p)
# if Qn is zero change to NA
fert1$Qn <- ifelse(fert1$Qn == 0, NA, fert1$Qn)
fert2$Qn <- ifelse(fert2$Qn == 0, NA, fert2$Qn)
# if vfert is 0 change to NA
fert1$Vfert <- ifelse(fert1$Vfert == 0, NA, fert1$Vfert)
fert2$Vfert <- ifelse(fert2$Vfert == 0, NA, fert2$Vfert)
fert <- rbind(fert1, fert2) %>% unique
fert$Pn <- fert$Vfert/fert$n
fert <- group_by(fert, holder_id, household_id2, parcel_id, field_id) %>%
summarise(N=sum(Qn, na.rm=TRUE), P=sum(Qp, na.rm=TRUE),
WPn=sum((Qn/N)*Pn, na.rm=TRUE)) %>%
mutate(WPn = replace(WPn, WPn==0, NA))
rm(fert1, fert2, conv)
#######################################
############### LABOUR ################
#######################################
# POST PLANTING labour
# WDswitch
pp_lab <- read_dta(file.path(dataPath, "Post-Planting/sect3_pp_w2.dta")) %>%
dplyr::select(holder_id, household_id2, parcel_id, field_id, pp_s3q27_a:pp_s3q29_f) %>%
transmute(holder_id, household_id2, parcel_id, field_id,
id1=pp_s3q27_a, lab1=pp_s3q27_b*pp_s3q27_c,
id2=pp_s3q27_e, lab2=pp_s3q27_f*pp_s3q27_g,
id3=pp_s3q27_i, lab3=pp_s3q27_j*pp_s3q27_k,
id4=pp_s3q27_m, lab4=pp_s3q27_n*pp_s3q27_o,
id5=pp_s3q27_q, lab5=pp_s3q27_r*pp_s3q27_s,
id6=pp_s3q27_u, lab6=pp_s3q27_v*pp_s3q27_w,
id7=pp_s3q27_y, lab7=pp_s3q27_z*pp_s3q27_ca,
hirM=pp_s3q28_a*pp_s3q28_b,
hirF=pp_s3q28_d*pp_s3q28_e,
hirC=pp_s3q28_g*pp_s3q28_h,
OHHlabM=pp_s3q29_a*pp_s3q29_b,
OHHlabF=pp_s3q29_c*pp_s3q29_d,
OHHlabC=pp_s3q29_e*pp_s3q29_f
)
# make all NA values zero
pp_lab[is.na(pp_lab)] <- 0
# sum all labour across a single plot - all measured in days
pp_lab <- transmute(pp_lab, holder_id, household_id2, parcel_id, field_id,
plant_lab=lab1 + lab2 + lab3 + lab4 + lab5 + lab6 + lab7 +
hirM + hirF + hirC + OHHlabM + OHHlabF + OHHlabC)
# presumably if crop was planted then some labour
# was used. Therefore set all 0's for plant_lab
# to NA
pp_lab$plant_lab[pp_lab$plant_lab %in% 0] <- NA
# POST HARVEST
# WDswitch
ph_lab <- read_dta(file.path(dataPath, "Post-Harvest/sect10_ph_w2.dta")) %>%
dplyr::select(holder_id, household_id2, parcel_id, field_id,
crop=crop_code, ph_s10q01_a:ph_s10q03_f) %>%
transmute(holder_id, household_id2, parcel_id, field_id, crop,
id1=ph_s10q02_a, lab1=ph_s10q02_b*ph_s10q02_c,
id2=ph_s10q02_e, lab2=ph_s10q02_f*ph_s10q02_g,
id3=ph_s10q02_i, lab3=ph_s10q02_j*ph_s10q02_k,
id4=ph_s10q02_m, lab4=ph_s10q02_n*ph_s10q02_o,
hirM=ph_s10q01_a*ph_s10q01_b,
hirF=ph_s10q01_d*ph_s10q01_e,
hirC=ph_s10q01_g*ph_s10q01_h,
OHHlabM=ph_s10q03_a*ph_s10q03_b,
OHHlabF=ph_s10q03_c*ph_s10q03_d,
OHHlabC=ph_s10q03_e*ph_s10q03_f
)
# -------------------------------------
# filter for maize crops only because
# the post harvest labour is recorded
# at the crop level
ph_lab$crop <- as_factor(ph_lab$crop)
ph_lab <- filter(ph_lab, crop %in% "MAIZE") %>% select(-crop)
# make all NA values zero
ph_lab[is.na(ph_lab)] <- 0
# sum all labour across a single plot - all measured in days
ph_lab <- transmute(ph_lab, holder_id, household_id2, parcel_id, field_id,
harv_lab=lab1 + lab2 + lab3 + lab4 +
hirM + hirF + hirC + OHHlabM + OHHlabF + OHHlabC)
ph_lab$harv_lab[ph_lab$harv_lab %in% 0] <- NA
#######################################
############### GEO ###################
#######################################
# WDswitch
load(file.path(dataPath, "ETH_geo_total_2013.RData"))
geo <- geo.total.plot %>%
dplyr::select(holder_id, household_id2, ea_id2, parcel_id, field_id, lon, lat, SPEI, RootDepth, region=NAME_1,
AEZ=ssa_aez09, ph=ph_sd1_sd3, ph2=ph_sd1_sd5,
SOC=SOC_sd1_sd3, SOC2=SOC_sd1_sd5, rain=gsRainfall,
YA, YW, YP, everything()) %>%
unique()
#######################################
############### AREAs #################
#######################################
# -------------------------------------
# imputed and original gps measurements
# included
# WDswitch
areas <- read_dta(paste(dataPath, "areas_ETH2013.dta", sep="/"))
areas <- select(areas, holder_id, household_id2,
parcel_id, field_id, area_gps, area_gps_mi50)
areas$area_gps <- ifelse(areas$area_gps %in% 0, NA, areas$area_gps)
areas$area_gps_mi50 <- ifelse(areas$area_gps_mi50 %in% 0, NA, areas$area_gps_mi50)
areaTotal <- group_by(areas, household_id2) %>%
summarise(area_tot = sum(area_gps_mi50, na.rm=TRUE))
#######################################
########### SOCIO/ECONOMIC ############
#######################################
# WDswitch
se <- read_dta(file.path(dataPath, "Household/sect1_hh_w2.dta")) %>%
filter(hh_s1q02 %in% 1) %>% # 1 for head of household
dplyr::select(household_id2, sex=hh_s1q03, age=hh_s1q04_a,
rural)
se$sex <- ifelse(se$sex %in% 2, 1, 0) # 1/0 female/male
se$rural <- ifelse(se$rural %in% 1, 1, 0)
# ownership of a parcel
# WDswitch
own <- read_dta(file.path(dataPath, "Post-Planting/sect2_pp_w2.dta")) %>%
dplyr::select(holder_id, household_id2, parcel_id, cert=pp_s2q04)
own$cert <- ifelse(own$cert %in% 1, 1, 0)
#######################################
########### CROSS SECTION #############
#######################################
# -------------------------------------
# crop level joins
ETH2013 <- left_join(oput_maize, crop)
ETH2013 <- left_join(ETH2013, ph_lab)
# -------------------------------------
# field level joins
ETH2013 <- left_join(ETH2013, fert)
ETH2013 <- left_join(ETH2013, areas)
ETH2013 <- left_join(ETH2013, pp_lab)
ETH2013 <- left_join(ETH2013, field)
# -------------------------------------
# parcel level joins
ETH2013 <- left_join(ETH2013, parcel)
ETH2013 <- left_join(ETH2013, own)
# -------------------------------------
# household level joins
ETH2013 <- left_join(ETH2013, se)
ETH2013 <- left_join(ETH2013, areaTotal)
ETH2013 <- left_join(ETH2013, geo)
# -------------------------------------
# Make some new variables
# -------------------------------------
# per hectacre
ETH2013 <- mutate(ETH2013,
yld=qty/area_gps_mi50,
N=N/area_gps_mi50,
P=P/area_gps_mi50
)
rm(list=ls()[!ls() %in% "ETH2013"])
# save to file
save(ETH2013, file=".\\Analysis\\ETH\\Data\\ETH2013_data.RData")
names(ETH2013)
head(ETH2013$cropping)
names(ETH2013)
areas <- read_dta(paste(dataPath, "areas_ETH2013.dta", sep="/"))
dataPath <- "C:/Users/Tomas/Documents/LEI/data/ETH"
areas <- read_dta(paste(dataPath, "areas_ETH2013.dta", sep="/"))
names(areas)
names(ETH2013)
head(ETH2013$seed_type)
table(ETH2013$seed_type)
levels(ETH2013$soil_type)
head(ETH2013$fallow10)
names(ETH2013)
names(ETH2013)
head(ETH2013$eros_prot)
table(ETH2013$eros_prot)
table(ETH2013$extension)
setwd("c:/users/tomas/documents/lei/pol/data")
pol_data3 <- read.csv("pol_data3.csv")
pol_data4 <- pol_data3[order(pol_data3$reg), ]
head(pol_data4)
pol_data4 <- pol_data3[order(pol_data3$reg, pol_data3$dis), ]
head(pol_data4)
head(pol_data4, 100)
pol_data4$id <- 1:nrow(pol_data4)
head(pol_data4, 100)
write.csv(pol_data4, "pol_data4.csv", row.names=FALSE)
