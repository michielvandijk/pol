# ages with sex
ag$male15_39 <- ifelse(ag$age_group=='[14,39)' & ag$sex==0, 1, NA)
ag$female15_39 <- ifelse(ag$age_group=='[14,39)' & ag$sex==1, 1, NA)
ag$male40_59 <- ifelse(ag$age_group=='[39,59)' & ag$sex==0, 1, NA)
ag$female40_59 <- ifelse(ag$age_group=='[39,59)' & ag$sex==1, 1, NA)
# summarise to get variables per household.
by_hhid <- group_by(ag, household_id2) %>% summarise(
less5 = sum(less5, na.rm = TRUE),
above60 = sum(above60, na.rm = TRUE),
male15_39 = sum(male15_39, na.rm = TRUE),
female15_39 = sum(female15_39, na.rm = TRUE),
male40_59 = sum(male40_59, na.rm = TRUE),
female40_59 = sum(female40_59, na.rm = TRUE),
g5l15 = sum(g5l15, na.rm = TRUE))
# join with plot manager information to get the
# household characteristics (hc)
hc <- left_join(pmc, by_hhid)
rm(pmc, ag, by_hhid)
# ------------------------------------
# areas
areas <- read_dta(file.path(dataPath, "Post-Planting/sect3_pp_w2.dta")) %>%
dplyr::select(region=saq01, zone=saq02, woreda=saq03,
holder_id, household_id2, parcel_id,
field_id, area_sr=pp_s3q02_a,
local_unit=pp_s3q02_c, area_gps=pp_s3q05_a)
areas$region <- as.numeric(areas$region)
areas$local_unit <- as.numeric(areas$local_unit)
# it is possible to get some idea of
# a conversion for most of the local units
# the guys we are missing are 7 and 8
table(areas$local_unit)
sum(table(areas$local_unit)[7:8]) # 8282
# unit conversions
unitCon <- read_dta(file.path(dataPath, "ET_local_area_unit_conversion.dta")) %>%
dplyr::select(region, zone, woreda, local_unit, conversion)
unitCon$region <- as.numeric(unitCon$region)
unitCon$local_unit <- as.numeric(unitCon$local_unit)
# many missing values when joining areas with
# conversion. Only way to reduce this is to use
# average of local conversion. No regional
# differences.
unitCon <- group_by(unitCon, local_unit) %>%
summarise(conversion = mean(conversion, na.rm=TRUE))
# join areas with converisons
areas <- left_join(areas, unitCon)
# self reported area is our most important
# variable for imputing the missing areas
# so remove all rows where area_sr is missing
areas <- areas[!is.na(areas$area_sr), ]
# if the local unit is square metres or
# hectacres then conversion is easy
areas$conversion <- ifelse(areas$local_unit %in% 1, 1/0.0001,
ifelse(areas$local_unit %in% 2, 1, areas$conversion))
# find out how many plots will still be missing
# gps areas after imputation and remove plots
# for which we do not have a conversion
sum(is.na(areas$area_gps) & is.na(areas$conversion)) # 237
areas <- areas[!is.na(areas$conversion), ]
# multiply the self reported are by the
# conversion. further multiply by 0.0001
# to get square metres to hectacres
sm2ha <- 0.0001
areas$area_sr <- areas$area_sr*areas$conversion*sm2ha
areas$area_gps <- areas$area_gps*sm2ha
# make a plot to compare the self reported and the
# gps measurements. Outliers so use 99th quantile
# of areas_gps. These will be winsored anyway
q99gps <- quantile(areas$area_gps, 0.99, na.rm=TRUE)
with(areas[areas$area_sr < q99gps & areas$area_gps < q99gps,],
plot(area_gps ~ area_sr))
abline(0, 1, col='red', lwd=3)
# winsor self reported areas as they are likely to
# include outliers - see world bank imputation
# paper
source("C:/Users/Tomas/Documents/LEI/pro-gap/winsor.R")
areas$area_sr <- winsor(areas$area_sr, 0.001, lower=FALSE)
# make another comparison plot
with(areas, plot(area_gps ~ area_sr))
areas <- select(areas, -region, -zone, -woreda, -conversion, -local_unit)
rm(list=ls()[!ls() %in% c("plots", "hc", "areas")])
# -------------------------------------
# join all information together
impData <- left_join(areas, plots) %>% left_join(hc)
rm(list=ls()[!ls() %in% "impData"])
ids <- impData[, c("holder_id","household_id2", "parcel_id","field_id")]
impData$holder_id <- impData$household_id2 <-
impData$parcel_id <- impData$field_id <-
impData$individual_id <- NULL
impData <- mutate(impData,
area_sr2 = area_sr^2,
area_sr3 = area_sr^3,
area_sr_rural = area_sr*rural,
area_sr_sex = area_sr*sex,
area_sr_rented = area_sr*rented,
area_sr_fallowed = area_sr*fallowed,
area_sr_age = area_sr*age,
area_sr_owned = area_sr*owned
)
summary(impData)
18*16
288*0.08
288 - 23
setwd("C:/Users/Tomas/Documents/LEI/Afripol/TZA/data")
rm(list=ls())
setwd("C:/Users/Tomas/Documents/LEI/Afripol/TZA/data")
x <- readLines("jimboKata2010Altered.txt")
x2 <- gsub("(?<=[a-zA-Z])(\\s|\\s{2})(?=[a-zA-Z])", "-", x, perl=TRUE)
x3 <- gsub("(?<=\\d)(\\s{0,})(?!\\w)", "", x2, perl=TRUE)
x4 <- gsub("(\\s)(?!\\w)", "", x3, perl=TRUE)
x5 <- gsub("(?<!\\w)(\\s)", "", x4, perl = TRUE)
list <- lapply(x5, function(elt) strsplit(elt, " "))
s <- sapply(list, function(elt) length(elt[[1]]))
bad <- s %in% 0 | s %in% 1 | s %in% 3
x6 <- x5[!bad]
extender <- function(x){
if(length(x) == 4){
x <- c(NA, NA, NA, x)
} else if (length(x)==5){
x <- c(NA, NA, x)
} else if (length(x)==6){
x <- c(NA, x)
}
return(x)
}
x7 <- strsplit(x6, " ")
x8 <- lapply(x7, function(elt) extender(elt))
df <- data.frame(
reg=sapply(x8, function(elt) return(elt[1])),
dis=sapply(x8, function(elt) return(elt[2])),
con=sapply(x8, function(elt) return(elt[3])),
ward=sapply(x8, function(elt) return(elt[4])),
voters=sapply(x8, function(elt) return(elt[5])),
male=sapply(x8, function(elt) return(elt[6])),
female=sapply(x8, function(elt) return(elt[7]))
)
source("C:/Users/Tomas/Documents/LEI/Afripol/TZA/code/filler.R")
df$reg <- backer(df$reg)
df$dis <- backer(df$dis)
df$con <- backer(df$con)
df$reg <- gsub("-", " ", df$reg)
df$dis <- gsub("-", " ", df$dis)
df$con <- gsub("-", " ", df$con)
df$ward <- gsub("-", " ", df$ward)
df$voters <- gsub(",", "", df$voters)
df$male <- gsub(",", "", df$male)
df$female <- gsub(",", "", df$female)
df$voters <- as.integer(df$voters)
df$male <- as.integer(df$male)
df$female <- as.integer(df$female)
head(df)
rm(list=ls())
setwd("C:/Users/Tomas/Documents/LEI/pol/data")
x <- readLines("jimboKata2010Altered.txt")
x2 <- gsub("(?<=[a-zA-Z])(\\s|\\s{2})(?=[a-zA-Z])", "-", x, perl=TRUE)
x3 <- gsub("(?<=\\d)(\\s{0,})(?!\\w)", "", x2, perl=TRUE)
x4 <- gsub("(\\s)(?!\\w)", "", x3, perl=TRUE)
x5 <- gsub("(?<!\\w)(\\s)", "", x4, perl = TRUE)
list <- lapply(x5, function(elt) strsplit(elt, " "))
s <- sapply(list, function(elt) length(elt[[1]]))
bad <- s %in% 0 | s %in% 1 | s %in% 3
x6 <- x5[!bad]
extender <- function(x){
if(length(x) == 4){
x <- c(NA, NA, NA, x)
} else if (length(x)==5){
x <- c(NA, NA, x)
} else if (length(x)==6){
x <- c(NA, x)
}
return(x)
}
x7 <- strsplit(x6, " ")
x8 <- lapply(x7, function(elt) extender(elt))
df <- data.frame(
reg=sapply(x8, function(elt) return(elt[1])),
dis=sapply(x8, function(elt) return(elt[2])),
con=sapply(x8, function(elt) return(elt[3])),
ward=sapply(x8, function(elt) return(elt[4])),
voters=sapply(x8, function(elt) return(elt[5])),
male=sapply(x8, function(elt) return(elt[6])),
female=sapply(x8, function(elt) return(elt[7]))
)
source("C:/Users/Tomas/Documents/LEI/Afripol/TZA/code/filler.R")
df$reg <- backer(df$reg)
df$dis <- backer(df$dis)
df$con <- backer(df$con)
df$reg <- gsub("-", " ", df$reg)
df$dis <- gsub("-", " ", df$dis)
df$con <- gsub("-", " ", df$con)
df$ward <- gsub("-", " ", df$ward)
df$voters <- gsub(",", "", df$voters)
df$male <- gsub(",", "", df$male)
df$female <- gsub(",", "", df$female)
df$voters <- as.integer(df$voters)
df$male <- as.integer(df$male)
df$female <- as.integer(df$female)
summary(df)
View(df)
rm(list=ls()[ls() %in% "df"])
?save
# -------------------------------------
# pdf scrape 2010
# -------------------------------------
setwd("C:/Users/Tomas/Documents/LEI/pol/data")
# use regex to order the information the way
# that you want
x <- readLines("jimboKata2010Altered.txt")
x2 <- gsub("(?<=[a-zA-Z])(\\s|\\s{2})(?=[a-zA-Z])", "-", x, perl=TRUE)
x3 <- gsub("(?<=\\d)(\\s{0,})(?!\\w)", "", x2, perl=TRUE)
x4 <- gsub("(\\s)(?!\\w)", "", x3, perl=TRUE)
x5 <- gsub("(?<!\\w)(\\s)", "", x4, perl = TRUE)
# select on length of resulting strings
list <- lapply(x5, function(elt) strsplit(elt, " "))
s <- sapply(list, function(elt) length(elt[[1]]))
bad <- s %in% 0 | s %in% 1 | s %in% 3
x6 <- x5[!bad]
# function for filling gaps with NA values
extender <- function(x){
if(length(x) == 4){
x <- c(NA, NA, NA, x)
} else if (length(x)==5){
x <- c(NA, NA, x)
} else if (length(x)==6){
x <- c(NA, x)
}
return(x)
}
# split on whitespace and create a new dataframe
x7 <- strsplit(x6, " ")
x8 <- lapply(x7, function(elt) extender(elt))
# create new dataframe for holdig this information
df <- data.frame(
reg=sapply(x8, function(elt) return(elt[1])),
dis=sapply(x8, function(elt) return(elt[2])),
con=sapply(x8, function(elt) return(elt[3])),
ward=sapply(x8, function(elt) return(elt[4])),
voters=sapply(x8, function(elt) return(elt[5])),
male=sapply(x8, function(elt) return(elt[6])),
female=sapply(x8, function(elt) return(elt[7]))
)
# read in filler functions and back fill
# all the values that are NA
source("C:/Users/Tomas/Documents/LEI/Afripol/TZA/code/filler.R")
df$reg <- backer(df$reg)
df$dis <- backer(df$dis)
df$con <- backer(df$con)
# put hyphenated values back to normal
df$reg <- gsub("-", " ", df$reg)
df$dis <- gsub("-", " ", df$dis)
df$con <- gsub("-", " ", df$con)
df$ward <- gsub("-", " ", df$ward)
# get rid of commas and replace with
# and make integers of variables
df$voters <- gsub(",", "", df$voters)
df$male <- gsub(",", "", df$male)
df$female <- gsub(",", "", df$female)
df$voters <- as.integer(df$voters)
df$male <- as.integer(df$male)
df$female <- as.integer(df$female)
rm(list=ls()[!ls() %in% "df"])
save(df, paste(getwd(), "conLink2010.RData"))
save(df, paste(getwd(), "conLink2010.RData", sep="/"))
save(df, file=paste(getwd(), "conLink2010.RData", sep="/"))
setwd("C:/Users/Tomas/Documents/LEI/pol")
rm(df)
setwd("C:/Users/Tomas/Documents/LEI/pol")
load(paste(getwd(), "data/conLink2010.RData", sep="/"))
setwd("C:/Users/Tomas/Documents/LEI/pol/data/2012 Wards Shapefiles")
library(rgdal)
ogrListLayers("TZwards.shp")
TZA <- readOGR("TZwards.shp", layer="TZwards")
wards <- toupper(TZA@data$Ward_Name)
unique(df$reg)
length(unique(df$ward))
table(toupper(df$ward) %in% wards)
missing <- toupper(df$ward) %in% wards
sum(missing)
missing <- !toupper(df$ward) %in% wards
sum(missing)
missing_data <- df[missing, ]
names(df)
table(missing_data$reg[drop=TRUE])
table(missing_data$dis[drop=TRUE])
rm(list=ls())
# -------------------------------------
# pdf scrape 2010
# -------------------------------------
setwd("C:/Users/Tomas/Documents/LEI/pol/data")
# use regex to order the information the way
# that you want
x <- readLines("jimboKata2010Altered.txt")
x2 <- gsub("(?<=[a-zA-Z])(\\s|\\s{2})(?=[a-zA-Z])", "-", x, perl=TRUE)
x3 <- gsub("(?<=\\d)(\\s{0,})(?!\\w)", "", x2, perl=TRUE)
x4 <- gsub("(\\s)(?!\\w)", "", x3, perl=TRUE)
x5 <- gsub("(?<!\\w)(\\s)", "", x4, perl = TRUE)
# select on length of resulting strings
list <- lapply(x5, function(elt) strsplit(elt, " "))
s <- sapply(list, function(elt) length(elt[[1]]))
bad <- s %in% 0 | s %in% 1 | s %in% 3
x6 <- x5[!bad]
# function for filling gaps with NA values
extender <- function(x){
if(length(x) == 4){
x <- c(NA, NA, NA, x)
} else if (length(x)==5){
x <- c(NA, NA, x)
} else if (length(x)==6){
x <- c(NA, x)
}
return(x)
}
# split on whitespace and create a new dataframe
x7 <- strsplit(x6, " ")
x8 <- lapply(x7, function(elt) extender(elt))
# create new dataframe for holdig this information
conLink2010 <- data.frame(
reg=sapply(x8, function(elt) return(elt[1])),
dis=sapply(x8, function(elt) return(elt[2])),
con=sapply(x8, function(elt) return(elt[3])),
ward=sapply(x8, function(elt) return(elt[4])),
voters=sapply(x8, function(elt) return(elt[5])),
male=sapply(x8, function(elt) return(elt[6])),
female=sapply(x8, function(elt) return(elt[7]))
)
# read in filler functions and back fill
# all the values that are NA
source("C:/Users/Tomas/Documents/LEI/Afripol/TZA/code/filler.R")
conLink2010$reg <- backer(conLink2010$reg)
conLink2010$dis <- backer(conLink2010$dis)
conLink2010$con <- backer(conLink2010$con)
# put hyphenated values back to normal
conLink2010$reg <- gsub("-", " ", conLink2010$reg)
conLink2010$dis <- gsub("-", " ", conLink2010$dis)
conLink2010$con <- gsub("-", " ", conLink2010$con)
conLink2010$ward <- gsub("-", " ", conLink2010$ward)
# get rid of commas and replace with
# and make integers of variables
conLink2010$voters <- gsub(",", "", conLink2010$voters)
conLink2010$male <- gsub(",", "", conLink2010$male)
conLink2010$female <- gsub(",", "", conLink2010$female)
conLink2010$voters <- as.integer(conLink2010$voters)
conLink2010$male <- as.integer(conLink2010$male)
conLink2010$female <- as.integer(conLink2010$female)
rm(list=ls()[!ls() %in% "conLink2010"])
save(conLink2010, file=paste(getwd(), "conLink2010.RData", sep="/"))
rm(list=ls())
setwd("C:/Users/Tomas/Documents/LEI/pol")
library(rgdal)
library(haven)
library(dplyr)
load(paste(getwd(), "data/conLink2010.RData", sep="/"))
setwd("C:/Users/Tomas/Documents/LEI/pol/data/2012 Wards Shapefiles")
library(rgdal)
ogrListLayers("TZwards.shp")
TZA <- readOGR("TZwards.shp", layer="TZwards")
wards <- toupper(TZA@data$Ward_Name)
missing <- !toupper(conLink2010$ward) %in% wards
sum(missing)
missing_data <- conLink2010[missing, ]
table(missing_data$reg[drop=TRUE])
geoDir <- "C:/Users/Tomas/Documents/LEI/data/TZA/TZNPS2GEODTA/HH.Geovariables_Y2.dta"
gps <- read_dta(geoDir) %>%
select(y2_hhid, longitude=lon_modified, latitude=lat_modified, dist2Rd=dist01)
geoDir <- "C:/Users/Tomas/Documents/LEI/data/TZA/TZNPS2GEODTA/HH.Geovariables_Y2.dta"
gps <- read_dta(geoDir) %>%
select(y2_hhid, longitude=lon_modified, latitude=lat_modified)
summary(gps)
gps_mat <- cbind(gps$longitude, gps$latitude)
row.names(gps_mat) <- 1:nrow(gps_mat)
proj4string(TZA)
llCRS <- CRS(proj4string(TZA))
sp <- SpatialPoints(gps_mat, llCRS)
sel <- over(sp, TZA) %>% select(Region_Nam, District_N, Ward_Name)
df <- cbind(df, sel)
head(sel)
df <- cbind(gps, sel)
head(df)
length(unique(df$Ward_Name))
wards <- toupper(df$Ward_Name)
missing <- !toupper(conLink2010$ward %in% wards)
missing <- !toupper(conLink2010$ward) %in% wards
sum(missing)
missing <- !wards %in% toupper(conLink2010$ward)
sum(missing)
wards <- unique(toupper(df$Ward_Name))
missing <- !wards %in% toupper(conLink2010$ward)
sum(missing)
119/356
gps_mat <- cbind(gps$longitude, gps$latitude)
row.names(gps_mat) <- 1:nrow(gps_mat)
proj4string(TZA)
llCRS <- CRS(proj4string(TZA))
sp <- SpatialPoints(gps_mat, llCRS)
llCRS <- CRS(proj4string(TZA))
sp <- SpatialPoints(gps_mat, llCRS)
sel <- over(sp, TZA) %>%
select(reg=Region_Nam, dis=District_N, ward=Ward_Name)
wards2010 <- cbind(gps, sel)
length(unique(wards2010$Ward_Name)) # 356 wards in our data
head(sel)
head(gps)
length(unique(wards2010$ward)) # 356 wards in our data
wards <- unique(toupper(wards2010$ward))
missing <- !wards %in% toupper(conLink2010$ward)
sum(missing)
missing_data <- wards2010[missing, ]
wards <- toupper(wards2010$ward)
missing <- !wards %in% toupper(conLink2010$ward)
sum(missing) # 119 missing wards
missing_data <- wards2010[missing, ]
table(missing_data$reg[drop=TRUE])
table(missing_data$dis[drop=TRUE])
wards2010 <- unique(cbind(gps, sel))
head(wards2010)
wards2010 <- unique(wards2010[, -1])
wards2010 <- cbind(gps, sel)
wards2010 <- unique(wards2010[, -c(1, 2, 3])
wards2010 <- unique(wards2010[, -c(1, 2, 3)])
wards <- toupper(wards2010$ward)
missing <- !wards %in% toupper(conLink2010$ward)
missing_data <- wards2010[missing, ]
table(missing_data$reg[drop=TRUE])
head(wards2010)
wards2010 <- wards2010[!wards2010$reg %in% islands,]
head(wards2010)
unique(wards2010$reg)
head(wards2010)
wards2010 <- wards2010[!toupper(wards2010$reg) %in% toupper(islands),]
table(wards2010$reg %in% islands)
islands <- c("Kaskazini Unguja", "Kusini Unguja", "Mjini Magharibi",
"Kaskazini Pemba", "Kusini Pemba")
wards2010 <- wards2010[!toupper(wards2010$reg) %in% toupper(islands),]
wards <- toupper(wards2010$ward)
missing <- !wards %in% toupper(conLink2010$ward)
missing_data <- wards2010[missing, ]
table(missing_data$reg[drop=TRUE])
table(missing_data$dis[drop=TRUE])
sum(missing)
table(missing_data$reg[drop=TRUE])
missing[missing_data$reg%in% "Arusha",]
missing_data[missing_data$reg%in% "Arusha",]
missing_data[missing_data$reg%in% "Dar-es-salaam",]
missing_data[missing_data$reg%in% "Arusha",]
missing_data[missing_data$reg%in% "Dar-es-salaam",]
missing_data[missing_data$reg%in% "Dodoma",]
missing_data[missing_data$reg%in% "Geita",]
missing_data[missing_data$reg%in% "Iringa",]
missing_data[missing_data$reg%in% "Kagera",]
missing_data[missing_data$reg%in% "Katavi",]
missing_data[missing_data$reg%in% "Kigoma",]
missing_data[missing_data$reg%in% "Kilimanjaro",]
missing_data[missing_data$reg%in% "Lindi",]
missing_data[missing_data$reg%in% "Manyara",]
missing_data[missing_data$reg%in% "Mara",]
missing_data[missing_data$reg%in% "Mbeya",]
missing_data[missing_data$reg%in% "Mtwara",]
missing_data[missing_data$reg%in% "Njombe",]
missing_data[missing_data$reg%in% "Pwani",]
missing_data[missing_data$reg%in% "Ruvuma",]
missing_data[missing_data$reg%in% "Shinyanga",]
missing_data[missing_data$reg%in% "Simiyu",]
missing_data[missing_data$reg%in% "Singida",]
missing_data[missing_data$reg%in% "Tabora",]
missing_data[missing_data$reg%in% "Tanga",]
missing_data[missing_data$reg%in% "Arusha",]
conLink2010[conLink2010$reg %in% "Arusha", ]
missing_data[missing_data$reg%in% "Arusha",]
missing_data[missing_data$reg%in% "Dodoma",]
conLink2010[conLink2010$reg %in% "Dodoma", ]
missing_data[missing_data$reg%in% "Dodoma",]
wards2010 <- cbind(gps, sel)
head(wards2010)
head(sel)
sel <- over(sp, TZA) %>%
select(reg=Region_Nam, dis=District_N, ward=Ward_Name) %>%
unique
wards2010 <- over(sp, TZA) %>%
select(reg=Region_Nam, dis=District_N, ward=Ward_Name) %>%
unique
islands <- c("Kaskazini Unguja", "Kusini Unguja", "Mjini Magharibi",
"Kaskazini Pemba", "Kusini Pemba")
wards2010 <- wards2010[!toupper(wards2010$reg) %in% toupper(islands),]
wards <- toupper(wards2010$ward)
missing <- !wards %in% toupper(conLink2010$ward)
sum(missing) # 74 wards are missing
missing_data <- wards2010[missing, ]
table(missing_data$reg[drop=TRUE])
table(missing_data$dis[drop=TRUE])
missing_data[missing_data$reg%in% "Arusha",]
conLink2010[conLink2010$dis %in% "Arusha mjini",]
conLink2010[conLink2010$dis %in% "Arusha Mjini",]
conLink2010[conLink2010$reg %in% "Arusha",]
missing_data[missing_data$reg%in% "Arusha",]
missing_data[missing_data$reg%in% "Dar-es-salaam",]
conLink2010[conLink2010$dis %in% "Kinondoni",]
conLink2010$ward <- gsub("Hananasif", "Hananasifu", conLink2010$ward)
conLink2010[conLink2010$dis %in% "Kinondoni",]
missing_data[missing_data$reg%in% "Dar-es-salaam",]
dis <- c("Kinondoni", "Kinondoni", "Kinondoni", "Ilala", "Temeke", "Temeke", "Temeke")
con <- c("Kawe", "Kawe", "Kibamba", "Ukonga", "Kigamboni", "Mbagala", "Mbagala")
ward <- c("Wazo", "Mabwepande", "Saranga", "Majohe", "Tungi", "Mianzini", "Kijichi")
length(ward)
names(conLink2010)
reg <- rep("Dar-es-salaam", 7)
dis <- c("Kinondoni", "Kinondoni", "Kinondoni", "Ilala", "Temeke", "Temeke", "Temeke")
con <- c("Kawe", "Kawe", "Kibamba", "Ukonga", "Kigamboni", "Mbagala", "Mbagala")
ward <- c("Wazo", "Mabwepande", "Saranga", "Majohe", "Tungi", "Mianzini", "Kijichi")
voters <- NA
male <- NA
female <- NA
DES_miss <- data.frame(reg, dis, con, ward, voters, male, female)
DES_miss
