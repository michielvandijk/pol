setwd("C:/Users/Tomas/Documents/LEI/Afripol/TZA/2012 Wards Shapefiles")
library(rgdal)
ogrListLayers("TZwards.shp")
TZA <- readOGR("TZwards.shp", layer="TZwards")
rm(TZA)
setwd("C:/Users/Tomas/Documents/work/LEI/Afripol/TZA/data")
getwd()
setwd("..")
setwd("C:/Users/Tomas/Documents/work/LEI/Afripol/TZA/data")
setwd("C:/Users/Tomas/Documents/LEI/Afripol/TZA/data")
x <- readLines("jimboKata2010Altered.txt")
x2 <- gsub("(?<=[a-zA-Z])(\\s|\\s{2})(?=[a-zA-Z])", "-", x, perl=TRUE)
x3 <- gsub("(?<=\\d)(\\s{0,})(?!\\w)", "", x2, perl=TRUE)
x4 <- gsub("(\\s)(?!\\w)", "", x3, perl=TRUE)
x5 <- gsub("(?<!\\w)(\\s)", "", x4, perl = TRUE)
list <- lapply(x5, function(elt) strsplit(elt, " "))
s <- sapply(list, function(elt) length(elt[[1]]))
bad <- s %in% 0 | s %in% 1 | s %in% 3
x6 <- x5[!bad]
extender <- function(x){
if(length(x) == 4){
x <- c(NA, NA, NA, x)
} else if (length(x)==5){
x <- c(NA, NA, x)
} else if (length(x)==6){
x <- c(NA, x)
}
return(x)
}
x7 <- strsplit(x6, " ")
x8 <- lapply(x7, function(elt) extender(elt))
df <- data.frame(
reg=sapply(x8, function(elt) return(elt[1])),
dis=sapply(x8, function(elt) return(elt[2])),
con=sapply(x8, function(elt) return(elt[3])),
ward=sapply(x8, function(elt) return(elt[4])),
voters=sapply(x8, function(elt) return(elt[5])),
male=sapply(x8, function(elt) return(elt[6])),
female=sapply(x8, function(elt) return(elt[7]))
)
source("C:/Users/Tomas/Documents/filler.R")
getwd()
source("C:/Users/Tomas/Documents/LEI/Afripol/TZA/code/filler.R")
df$reg <- backer(df$reg)
df$dis <- backer(df$dis)
df$con <- backer(df$con)
df$reg <- gsub("-", " ", df$reg)
df$dis <- gsub("-", " ", df$dis)
df$con <- gsub("-", " ", df$con)
df$ward <- gsub("-", " ", df$ward)
df$voters <- gsub(",", "", df$voters)
df$male <- gsub(",", "", df$male)
df$female <- gsub(",", "", df$female)
df$voters <- as.integer(df$voters)
df$male <- as.integer(df$male)
df$female <- as.integer(df$female)
head(df)
rm(list=ls())
# -------------------------------------
# scrape pdf file to find a match between
# the constituencies and the wards that
# make up Tanzania.
setwd("C:/Users/Tomas/Documents/LEI/Afripol/TZA/data")
# use regex to order the information the way
# that you want
x <- readLines("jimboKata2010Altered.txt")
x2 <- gsub("(?<=[a-zA-Z])(\\s|\\s{2})(?=[a-zA-Z])", "-", x, perl=TRUE)
x3 <- gsub("(?<=\\d)(\\s{0,})(?!\\w)", "", x2, perl=TRUE)
x4 <- gsub("(\\s)(?!\\w)", "", x3, perl=TRUE)
x5 <- gsub("(?<!\\w)(\\s)", "", x4, perl = TRUE)
# select on length of resulting strings
list <- lapply(x5, function(elt) strsplit(elt, " "))
s <- sapply(list, function(elt) length(elt[[1]]))
bad <- s %in% 0 | s %in% 1 | s %in% 3
x6 <- x5[!bad]
# function for filling gaps with NA values
extender <- function(x){
if(length(x) == 4){
x <- c(NA, NA, NA, x)
} else if (length(x)==5){
x <- c(NA, NA, x)
} else if (length(x)==6){
x <- c(NA, x)
}
return(x)
}
# split on whitespace and create a new dataframe
x7 <- strsplit(x6, " ")
x8 <- lapply(x7, function(elt) extender(elt))
# create new dataframe for holdig this information
df <- data.frame(
reg=sapply(x8, function(elt) return(elt[1])),
dis=sapply(x8, function(elt) return(elt[2])),
con=sapply(x8, function(elt) return(elt[3])),
ward=sapply(x8, function(elt) return(elt[4])),
voters=sapply(x8, function(elt) return(elt[5])),
male=sapply(x8, function(elt) return(elt[6])),
female=sapply(x8, function(elt) return(elt[7]))
)
# read in filler functions and back fill
# all the values that are NA
source("C:/Users/Tomas/Documents/LEI/Afripol/TZA/code/filler.R")
df$reg <- backer(df$reg)
df$dis <- backer(df$dis)
df$con <- backer(df$con)
# put hyphenated values back to normal
df$reg <- gsub("-", " ", df$reg)
df$dis <- gsub("-", " ", df$dis)
df$con <- gsub("-", " ", df$con)
df$ward <- gsub("-", " ", df$ward)
# get rid of commas and replace with
# and make integers of variables
df$voters <- gsub(",", "", df$voters)
df$male <- gsub(",", "", df$male)
df$female <- gsub(",", "", df$female)
df$voters <- as.integer(df$voters)
df$male <- as.integer(df$male)
df$female <- as.integer(df$female)
rm(list=ls()[!ls() %in% "df"])
head(df)
length(unique(df$con))
table(df$reg)
unique(df$reg)
# -------------------------------------
# scrape pdf file to find a match between
# the constituencies and the wards that
# make up Tanzania.
setwd("C:/Users/Tomas/Documents/LEI/Afripol/TZA/data")
# use regex to order the information the way
# that you want
x <- readLines("jimboKata2010Altered.txt")
x2 <- gsub("(?<=[a-zA-Z])(\\s|\\s{2})(?=[a-zA-Z])", "-", x, perl=TRUE)
x3 <- gsub("(?<=\\d)(\\s{0,})(?!\\w)", "", x2, perl=TRUE)
x4 <- gsub("(\\s)(?!\\w)", "", x3, perl=TRUE)
x5 <- gsub("(?<!\\w)(\\s)", "", x4, perl = TRUE)
# select on length of resulting strings
list <- lapply(x5, function(elt) strsplit(elt, " "))
s <- sapply(list, function(elt) length(elt[[1]]))
bad <- s %in% 0 | s %in% 1 | s %in% 3
x6 <- x5[!bad]
# function for filling gaps with NA values
extender <- function(x){
if(length(x) == 4){
x <- c(NA, NA, NA, x)
} else if (length(x)==5){
x <- c(NA, NA, x)
} else if (length(x)==6){
x <- c(NA, x)
}
return(x)
}
# split on whitespace and create a new dataframe
x7 <- strsplit(x6, " ")
x8 <- lapply(x7, function(elt) extender(elt))
# create new dataframe for holdig this information
df <- data.frame(
reg=sapply(x8, function(elt) return(elt[1])),
dis=sapply(x8, function(elt) return(elt[2])),
con=sapply(x8, function(elt) return(elt[3])),
ward=sapply(x8, function(elt) return(elt[4])),
voters=sapply(x8, function(elt) return(elt[5])),
male=sapply(x8, function(elt) return(elt[6])),
female=sapply(x8, function(elt) return(elt[7]))
)
# read in filler functions and back fill
# all the values that are NA
source("C:/Users/Tomas/Documents/LEI/Afripol/TZA/code/filler.R")
df$reg <- backer(df$reg)
df$dis <- backer(df$dis)
df$con <- backer(df$con)
# put hyphenated values back to normal
df$reg <- gsub("-", " ", df$reg)
df$dis <- gsub("-", " ", df$dis)
df$con <- gsub("-", " ", df$con)
df$ward <- gsub("-", " ", df$ward)
# get rid of commas and replace with
# and make integers of variables
df$voters <- gsub(",", "", df$voters)
df$male <- gsub(",", "", df$male)
df$female <- gsub(",", "", df$female)
df$voters <- as.integer(df$voters)
df$male <- as.integer(df$male)
df$female <- as.integer(df$female)
# change "Dâ€™Salaam" to Dar-Es-Salaam
df$reg <- ifelse(df$reg %in% "Dâ€™Salaam", Dar-Es-Salaam, df$reg)
rm(list=ls()[!ls() %in% "df"])
table(df$reg)
table( ~ reg + con)
table( reg + con)
table( df$reg + df$con)
x <- readLines("MAJIMBO NA KATA 2015 FINAL.txt")
x <- readLines("MAJIMBO NA KATA 2015 FINAL.txt")
head(x)
x2 <- gsub("(?<=[a-zA-Z])(\\s|\\s{2})(?=[a-zA-Z])", "-", x, perl=TRUE)
head(x2)
x3 <- gsub("(?<=\\d)(\\s{0,})(?!\\w)", "", x2, perl=TRUE)
head(x3)
x4 <- gsub("(\\s)(?!\\w)", "", x3, perl=TRUE)
head(x4)
x5 <- gsub("(?<!\\w)(\\s)", "", x4, perl = TRUE)
head(x5)
list <- lapply(x5, function(elt) strsplit(elt, " "))
s <- sapply(list, function(elt) length(elt[[1]]))
bad <- s %in% 0 | s %in% 1 | s %in% 3
x6 <- x5[!bad]
head(x6)
extender <- function(x){
if(length(x) == 4){
x <- c(NA, NA, NA, x)
} else if (length(x)==5){
x <- c(NA, NA, x)
} else if (length(x)==6){
x <- c(NA, x)
}
return(x)
}
# split on whitespace and create a new dataframe
x7 <- strsplit(x6, " ")
x8 <- lapply(x7, function(elt) extender(elt))
head(x8)
df <- data.frame(
reg=sapply(x8, function(elt) return(elt[1])),
dis=sapply(x8, function(elt) return(elt[2])),
con=sapply(x8, function(elt) return(elt[3])),
ward=sapply(x8, function(elt) return(elt[4])),
voters=sapply(x8, function(elt) return(elt[5])),
male=sapply(x8, function(elt) return(elt[6])),
female=sapply(x8, function(elt) return(elt[7]))
)
head(x5)
list <- lapply(x5, function(elt) strsplit(elt, " "))
s <- sapply(list, function(elt) length(elt[[1]]))
bad <- s %in% 0 | s %in% 1
x6 <- x5[!bad]
head9x6
head(x6)
head(x6, 50)
extender <- function(x){
if(length(x) == 3){
x <- c(NA, NA, NA, x)
} else if (length(x)==4){
x <- c(NA, NA, x)
} else if (length(x)==5){
x <- c(NA, x)
}
return(x)
}
x7 <- strsplit(x6, " ")
x8 <- lapply(x7, function(elt) extender(elt))
head(x8)
df <- data.frame(
reg=sapply(x8, function(elt) return(elt[1])),
dis=sapply(x8, function(elt) return(elt[2])),
con=sapply(x8, function(elt) return(elt[3])),
N1=sapply(x8, function(elt) return(elt[4])),
ward=sapply(x8, function(elt) return(elt[5])),
N2=sapply(x8, function(elt) return(elt[6]))
)
head9df
head(df)
tail(df)
source("C:/Users/Tomas/Documents/LEI/Afripol/TZA/code/filler.R")
df$reg <- backer(df$reg)
df$dis <- backer(df$dis)
df$con <- backer(df$con)
head(df)
tail(df)
df$reg <- gsub("-", " ", df$reg)
df$dis <- gsub("-", " ", df$dis)
df$con <- gsub("-", " ", df$con)
df$ward <- gsub("-", " ", df$ward)
head(df)
df$N2 <- gsub(",", "", df$N2)
df$N2 <- as.integer(df$N2)
head(df)
tail(df)
table(is.na(df$N2))
rm(list=ls()[!ls() %in% "df"])
head(df, 100)
rm(df)
setwd("C:/Users/Tomas/Documents/LEI/Afripol/TZA/2012 Wards Shapefiles")
library(rgdal)
ogrListLayers("TZwards.shp")
TZA <- readOGR("TZwards.shp", layer="TZwards")
nrow(TZA@data)
head(TZA@data)
tail(TZA@data)
